# Tactical Server Main Configuration
# Handles all tactical services routing and SSL termination

# Upstream definitions
upstream location_websocket {
    server location-service:8443;
    keepalive 32;
}

upstream location_api {
    server location-service:3002;
    keepalive 32;
}

upstream maps_service {
    server maps-service:8080;
    keepalive 32;
}

upstream openmaptiles {
    server openmaptiles:80;
    keepalive 32;
}

upstream outline {
    server outline:3001;
    keepalive 32;
}

upstream mattermost {
    server mattermost:8065;
    keepalive 32;
}

upstream filebrowser {
    server filebrowser:80;
    keepalive 32;
}

# HTTP to HTTPS redirect
server {
    listen 80;
    server_name tactical.local *.tactical.local;
    
    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
    
    # Redirect all HTTP to HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# Main HTTPS server
server {
    listen 443 ssl http2;
    server_name tactical.local;
    
    # SSL configuration
    ssl_certificate /etc/nginx/ssl/tactical.crt;
    ssl_certificate_key /etc/nginx/ssl/tactical.key;
    
    # HSTS
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    
    # Root directory for PWA
    root /var/www/html;
    index index.html;
    
    # Security headers
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # Rate limiting
    limit_req zone=general burst=5 nodelay;
    
    # Health check
    location /health {
        access_log off;
        return 200 "tactical-server-healthy\n";
        add_header Content-Type text/plain;
    }
    
    # PWA static files
    location / {
        try_files $uri $uri/ /index.html;
        
        # Cache static assets
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
        
        # PWA manifest and service worker
        location ~* \.(webmanifest|manifest\.json)$ {
            expires 0;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
        }
        
        location = /service-worker.js {
            expires 0;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
        }
    }
    
    # Location WebSocket (secure)
    location /tactical-location {
        proxy_pass https://location_websocket;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 86400;
        proxy_send_timeout 86400;
        proxy_connect_timeout 60;
        
        # Rate limiting for WebSocket
        limit_req zone=api burst=10 nodelay;
    }
    
    # Location API
    location /api/location {
        proxy_pass http://location_api/api;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_connect_timeout 60;
        proxy_send_timeout 60;
        proxy_read_timeout 60;
        
        # Rate limiting for API
        limit_req zone=api burst=20 nodelay;
    }
    
    # Maps Service
    location /api/maps {
        proxy_pass http://maps_service/api;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_connect_timeout 60;
        proxy_send_timeout 60;
        proxy_read_timeout 60;
        
        # Rate limiting for maps
        limit_req zone=api burst=50 nodelay;
    }
    
    # Map tiles
    location /tiles {
        proxy_pass http://openmaptiles;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Cache tiles
        proxy_cache_valid 200 1d;
        proxy_cache_valid 404 1m;
        add_header X-Cache-Status $upstream_cache_status;
        
        # Rate limiting for tiles
        limit_req zone=api burst=100 nodelay;
    }
}

# Mattermost (Chat)
server {
    listen 443 ssl http2;
    server_name chat.tactical.local;
    
    # SSL configuration
    ssl_certificate /etc/nginx/ssl/tactical.crt;
    ssl_certificate_key /etc/nginx/ssl/tactical.key;
    
    # HSTS
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    
    location / {
        proxy_pass http://mattermost;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 86400;
        proxy_send_timeout 86400;
        proxy_connect_timeout 60;
        
        # Rate limiting
        limit_req zone=general burst=10 nodelay;
    }
}

# Outline (Knowledge Base)
server {
    listen 443 ssl http2;
    server_name docs.tactical.local;
    
    # SSL configuration
    ssl_certificate /etc/nginx/ssl/tactical.crt;
    ssl_certificate_key /etc/nginx/ssl/tactical.key;
    
    # HSTS
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    
    location / {
        proxy_pass http://outline;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_connect_timeout 60;
        proxy_send_timeout 60;
        proxy_read_timeout 60;
        
        # Rate limiting
        limit_req zone=general burst=10 nodelay;
    }
}

# FileBrowser
server {
    listen 443 ssl http2;
    server_name files.tactical.local;
    
    # SSL configuration
    ssl_certificate /etc/nginx/ssl/tactical.crt;
    ssl_certificate_key /etc/nginx/ssl/tactical.key;
    
    # HSTS
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    
    location / {
        proxy_pass http://filebrowser;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_connect_timeout 60;
        proxy_send_timeout 60;
        proxy_read_timeout 60;
        
        # Rate limiting
        limit_req zone=general burst=10 nodelay;
    }
}

# Maps Service (dedicated subdomain)
server {
    listen 443 ssl http2;
    server_name maps.tactical.local;
    
    # SSL configuration
    ssl_certificate /etc/nginx/ssl/tactical.crt;
    ssl_certificate_key /etc/nginx/ssl/tactical.key;
    
    # HSTS
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    
    location / {
        proxy_pass http://maps_service;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_connect_timeout 60;
        proxy_send_timeout 60;
        proxy_read_timeout 60;
        
        # Rate limiting
        limit_req zone=api burst=50 nodelay;
    }
    
    # Direct tile access
    location /tiles {
        proxy_pass http://openmaptiles;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Cache tiles
        proxy_cache_valid 200 1d;
        proxy_cache_valid 404 1m;
        add_header X-Cache-Status $upstream_cache_status;
        
        # Rate limiting for tiles
        limit_req zone=api burst=100 nodelay;
    }
}